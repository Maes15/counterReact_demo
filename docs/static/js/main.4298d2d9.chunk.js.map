{"version":3,"sources":["Contador.jsx","App.js","index.js"],"names":["Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","increment","amountToIncrement","Number","amount","max","state","count","setState","from","min","react_default","a","createElement","onClick","className","style","fontSize","JSON","stringify","Component","App","Contador","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mQAyCeA,2BArCX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAGVQ,UAAY,WACR,IAAIC,EAAoBC,OAAOT,EAAKD,MAAMW,SAAW,EAElDF,EAAoB,KACdR,EAAKD,MAAMY,KAAOX,EAAKY,MAAMC,MAAQL,EAAoBR,EAAKD,MAAMY,IACrEX,EAAKc,SAAS,CAACD,MAAOJ,OAAOT,EAAKY,MAAMC,OAASL,IAEjDR,EAAKc,SAAS,CAACD,MAAOJ,OAAOT,EAAKD,MAAMgB,OAAS,KAItDP,EAAoB,KACdR,EAAKD,MAAMiB,KAAOhB,EAAKY,MAAMC,MAAQL,EAAoBR,EAAKD,MAAMiB,IACrEhB,EAAKc,SAAS,CAACD,MAAOJ,OAAOT,EAAKY,MAAMC,OAASL,IAEjDR,EAAKc,SAAS,CAACD,MAAOJ,OAAOT,EAAKD,MAAMgB,OAAS,MAjBzDf,EAAKY,MAAQ,CAAEC,MAAQJ,OAAOV,EAAMgB,OAAS,GAF/Bf,wEA0Bd,OAAOiB,EAAAC,EAAAC,cAAA,OAAKC,QAASjB,KAAKI,UAAWc,UAAU,WAC3CJ,EAAAC,EAAAC,cAAA,MAAIE,UAAWlB,KAAKS,MAAMC,MAAQ,IAAM,EAAI,OAAS,OAAQV,KAAKS,MAAMC,OACpEI,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,OAAKG,MAAO,CAAEC,SAAUpB,KAAKS,MAAMC,MAAQ,OACtCW,KAAKC,UAAUtB,KAAKJ,iBA/BvB2B,cCsBPC,0LAdX,OACEV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEXJ,EAAAC,EAAAC,cAACS,EAAD,CAASjB,IAAI,KAAKD,OAAO,MACzBO,EAAAC,EAAAC,cAACS,EAAD,CAASb,KAAK,KAAKJ,IAAI,OACvBM,EAAAC,EAAAC,cAACS,EAAD,CAASb,KAAK,SACdE,EAAAC,EAAAC,cAACS,EAAD,CAASb,KAAK,KAAKL,OAAO,KAAKM,IAAI,eAR3BU,cCHlBG,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4298d2d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './contador.css';\r\n\r\nclass Counter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { count:  Number(props.from) || 0};\r\n    }\r\n    increment = () => {\r\n        let amountToIncrement = Number(this.props.amount) || 1;\r\n\r\n        if(amountToIncrement > 0) {\r\n            if (!this.props.max || this.state.count + amountToIncrement < this.props.max) {\r\n                this.setState({count: Number(this.state.count) + amountToIncrement})\r\n            } else {\r\n                this.setState({count: Number(this.props.from) || 0})\r\n            }\r\n        }\r\n\r\n        if(amountToIncrement < 0) {\r\n            if (!this.props.min || this.state.count + amountToIncrement > this.props.min) {\r\n                this.setState({count: Number(this.state.count) + amountToIncrement})\r\n            } else {\r\n                this.setState({count: Number(this.props.from) || 0})\r\n            }\r\n        }\r\n\r\n\r\n    };\r\n    render(){\r\n        return <div onClick={this.increment} className=\"counter\">\r\n            <h1 className={this.state.count % 2 === 0 ? 'even' : 'odd'}>{this.state.count}</h1>\r\n                <small>\r\n                    <pre style={{ fontSize: this.state.count + 'px' }}>\r\n                        {JSON.stringify(this.props)}\r\n                    </pre>\r\n                </small>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Counter","import React, { Component } from 'react';\n//import Numero from './Numero.jsx';\nimport Link from './Link';\nimport Counter from './Contador';\n//import logo from './logo.svg';\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App-header\">\n\n          <Counter max=\"16\" amount=\"5\"/>\n          <Counter from=\"12\" max='30'/>\n          <Counter from='hola'/>\n          <Counter from=\"33\" amount=\"-3\" min=\"12\"/>\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n\n\n//<Numero num='32' />\n//<Numero num='100000' />\n//<Numero num='9' />\n//< Link lk=\"google\"/>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}